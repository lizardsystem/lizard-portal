[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/3.1.20/versions.cfg
find-links =
    http://downloads.sourceforge.net/project/dbfpy/dbfpy/2.2.5/dbfpy-2.2.5.tar.gz
unzip = true
prefer-final = true
versions = versions
extensions =
    mr.developer
    buildout-versions
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    sphinx
develop = .
eggs =
    lizard-portal


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
lizard-api = 0.11.1
lizard-area = 0.9.4
lizard-fewsnorm = 0.18
lizard-geo = 0.3
lizard-graph = 0.20
lizard-history = 0.2.6
lizard-measure = 1.9
lizard-portal =
lizard-registration = 0.1.3
lizard-security = 0.4
lizard-task = 0.11
lizard-map = 3.5.2

nens-graph = 0.13

# Reported by buildout-versions
Werkzeug = 0.8.3
amqplib = 1.0.2
anyjson = 0.3.1
celery = 2.4.6
dbfpy = 2.2.5
django-celery = 2.4.2
django-load = 1.0.0
django-picklefield = 0.1.9
django-registration = 0.8
djangorestframework = 0.3.3
django-tls = 0.0.2
kombu = 2.1.0
mock = 0.7.2
nose = 1.1.2
ordereddict = 1.1
python-dateutil = 1.5
setuptools = 0.6c12dev-r88846
suds = 0.4
lxml =


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk
lizard-area = git git@github.com:lizardsystem/lizard-area.git


[sysegg]
recipe = osc.recipe.sysegg
force-sysegg = true
eggs =
    psycopg2
    PIL
    matplotlib
    scipy
#    pyproj


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_portal
projectegg = lizard_portal
settings = testsettings
test = lizard_portal
eggs = lizard-portal


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    eazysvn
    createcoverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
